{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user doesn't have friendds\");\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post._id === action.payload.post_id) {\n          return action.payload.post;\n        }\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setPost,\n  setFriends,\n  setPosts\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPosts","map","post","_id","post_id","actions","reducer"],"sources":["/Users/palak/Social-Media-Project/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    mode: \"light\",\n    user: null,\n    token: null, \n    posts: [],\n};\n\nexport const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        setMode: (state) => {\n            state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n        },\n        setLogin: (state, action) => {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n                \n        }, \n        setLogout: (state) => {\n            state.user = null;\n            state.token = null;\n        },\n        setFriends: (state, action) => {\n            if(state.user) {\n                state.user.friends = action.payload.friends;\n            } else {\n                console.error(\"user doesn't have friendds\")\n            }\n        },\n        setPosts: (state,action) => {\n            state.posts = action.payload.posts;\n        },\n        setPost: (state, action) => {\n            const updatedPosts = state.posts.map((post) => {\n                if(post._id === action.payload.post_id) {\n                    return action.payload.post;\n                }\n                return post;\n            });\n            state.posts = updatedPosts;\n\n        }\n    } \n})\n\nexport const { setMode, setLogin, setLogout, setPost, setFriends, setPosts} = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDS,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzBF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IAEtC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAK;MAClBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC3B,IAAGF,KAAK,CAACP,IAAI,EAAE;QACXO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC/C,CAAC,MAAM;QACHC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACJ,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAACE,MAAM,KAAK;MACxBF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACtC,CAAC;IACDe,OAAO,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MACxB,MAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAK;QAC3C,IAAGA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACY,OAAO,EAAE;UACpC,OAAOb,MAAM,CAACC,OAAO,CAACU,IAAI;QAC9B;QACA,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,YAAY;IAE9B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEM,OAAO;EAAEL,UAAU;EAAEI;AAAQ,CAAC,GAAGb,SAAS,CAACoB,OAAO;AAC/F,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}